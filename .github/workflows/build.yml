name: build

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"

concurrency:
  group: build
  cancel-in-progress: true

env:
  CMAKE_VERSION: "3.27.6"
  MOLD_STABLE_VERSION: "2.2.0"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: zhongruoyu/gcc-ports:13-xenial
      SRCDIR: /usr/local/src
      PREFIX: /usr/local
      OPTDIR: /opt
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Start mold builder
        run: |
          docker run \
            --name="mold-builder" \
            --detach \
            --interactive \
            --mount="type=bind,src=$PWD,dst=/root" \
            --workdir="/root" \
            "$DOCKER_IMAGE"

      - name: Install CMake
        run: |
          docker exec \
            --env="CMAKE_VERSION=$CMAKE_VERSION" \
            --env="SRCDIR=$SRCDIR" \
            --env="PREFIX=$PREFIX" \
            mold-builder \
            ./install-cmake.sh

      - name: Build mold (nightly)
        id: build_mold_nightly
        env:
          MOLD_GIT_REF: main
          BUILD_SUFFIX: -nightly
        run: |
          docker exec \
            --env="MOLD_GIT_REF=$MOLD_GIT_REF" \
            --env="BUILD_SUFFIX=$BUILD_SUFFIX" \
            --env="SRCDIR=$SRCDIR" \
            --env="OPTDIR=$OPTDIR" \
            mold-builder \
            ./build-mold.sh

          build_output="mold$BUILD_SUFFIX.tar.gz"
          checksum_output="$build_output.sha256"
          sha256sum "$build_output" | tee "$checksum_output"

          mold_version="$(docker exec mold-builder "$OPTDIR/mold$BUILD_SUFFIX/bin/mold" -v)"
          checksum="$(cat "$checksum_output")"

          {
            echo "build_output=$build_output"
            echo "checksum_output=$build_output"
            echo "mold_version=$mold_version"
            echo "checksum=$checksum"
          } | tee -a "$GITHUB_OUTPUT"

      - name: Build mold (stable)
        id: build_mold_stable
        env:
          MOLD_GIT_REF: v${{ env.MOLD_STABLE_VERSION }}
          BUILD_SUFFIX: -${{ env.MOLD_STABLE_VERSION }}
        run: |
          docker exec \
            --env="MOLD_GIT_REF=$MOLD_GIT_REF" \
            --env="BUILD_SUFFIX=$BUILD_SUFFIX" \
            --env="SRCDIR=$SRCDIR" \
            --env="OPTDIR=$OPTDIR" \
            mold-builder \
            ./build-mold.sh

          build_output="mold$BUILD_SUFFIX.tar.gz"
          checksum_output="$build_output.sha256"
          sha256sum "$build_output" | tee "$checksum_output"

          mold_version="$(docker exec mold-builder "$OPTDIR/mold$BUILD_SUFFIX/bin/mold" -v)"
          checksum="$(cat "$checksum_output")"

          {
            echo "build_output=$build_output"
            echo "checksum_output=$build_output"
            echo "mold_version=$mold_version"
            echo "checksum=$checksum"
          } | tee -a "$GITHUB_OUTPUT"

      - name: Tag release
        id: tag_release
        run: |
          date="$(date +%Y%m%d)"
          tag_name=""

          for revision in {0..15}; do
            if [[ -z "$(git ls-remote --tags origin "refs/tags/$date.$revision")" ]]; then
              tag_name="$date.$revision"
              break
            fi
          done
          if [[ -z "$tag_name" ]]; then
            echo "Error: too many revisions on $date. Aborting." >&2
            exit 1
          fi

          git tag "$tag_name"
          git push origin "$tag_name"
          echo "tag_name=$tag_name" | tee -a "$GITHUB_OUTPUT"

      - name: Generate release notes
        id: release_notes
        run: |
          release_title="mold nightly builds ${{ steps.tag_release.outputs.tag_name }}"
          notes_file="release-notes.md"
          cat <<'EOF' | tee -a "$notes_file"
          ## Nightly (${{ steps.build_mold_nightly.outputs.build_output }})
          mold version: `${{ steps.build_mold_nightly.outputs.mold_version }}`
          SHA-256 checksum: `${{ steps.build_mold_nightly.outputs.checksum }}`
          ## Stable (${{ steps.build_mold_stable.outputs.build_output }})
          mold version: `${{ steps.build_mold_stable.outputs.mold_version }}`
          SHA-256 checksum: `${{ steps.build_mold_stable.outputs.checksum }}`
          EOF
          {
            echo "release_title=$release_title"
            echo "notes_file=$notes_file"
          } | tee -a "$GITHUB_OUTPUT"

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          gh release create \
            --latest \
            --notes-file='${{ steps.release_notes.outputs.notes_file }}' \
            --title='${{ steps.release_notes.outputs.release_title }}' \
            --verify-tag \
            '${{ steps.tag_release.outputs.tag_name }}' \
            '${{ steps.build_mold_nightly.outputs.build_output }}' \
            '${{ steps.build_mold_nightly.outputs.checksum_output }}' \
            '${{ steps.build_mold_stable.outputs.build_output }}' \
            '${{ steps.build_mold_stable.outputs.checksum_output }}'
